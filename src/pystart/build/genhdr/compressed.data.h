#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364objec\364can'\364no\364supporte\344functio\356mus\364assignmen\364ar\347keywor\344generato\362multipl\345positiona\354o\346nam\345b\345nonloca\354require\344wron\347doesn'\364fo\362invali\344missin\347suppor\364i\356t\357typ\345lengt\350incompatibl\345issubclass(\251afte\362empt\371foun\344n\357unsupporte\344allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344.mp\371\341argument\363redefine\344wit\350instanc\345negativ\345overflo\367sequenc\345conver\364defaul\364expect\363failed\254ha\363indice\363in\364outsid\345impor\364inden\364memor\371numbe\362synta\370value\363a\356clas\363inde\370isn'\364oute\362rang\345tupl\345'%q\247cod\345fro\355hav\345ite\355lis\364lon\347sel\346zer\357\262ba\344ou\364to\357*\252*\370a\363i\363o\362\261#%\344%\361%\365'break'/'continue\247'except\247'yield\247\252\2633-ar\3473\266\264<\275>\275BaseExceptio\356GeneratorExi\364INSTANC\305INVALI\304LH\323Lis\364Non\345StopIteratio\356__init__(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371arc\350arg\363assig\356attribut\345attribute\363bas\345base\363befor\345bindin\347buffe\362buil\344")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\334\270loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\336\270\205")
MP_MATCH_COMPRESSED("* arg after **", "\377\337\210\236\323")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\324\206\217\207target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\341pow()\203\204")
MP_MATCH_COMPRESSED("INVALID INSTANCE", "\377\351\350")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\352\215\211\210\206\217\277id")
MP_MATCH_COMPRESSED("List must have length of exactly 4", "\377\353\206\311\233\215exactly\343")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\356should return\354")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\216reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported", "\377\371\203\204")
MP_MATCH_COMPRESSED("bad format string", "\377\320format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\320typecode")
MP_MATCH_COMPRESSED("bytecode overflow", "\377bytecode\257")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\202\367\231\244")
MP_MATCH_COMPRESSED("can't convert to int", "\377\202\261\231\267")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\202\261\231str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\202create\255")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\202declare\220\230\303\307")
MP_MATCH_COMPRESSED("can't delete expression", "\377\202delete\244")
MP_MATCH_COMPRESSED("can't import name %q", "\377\202\271\216\332")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\202perform relative\271")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\202send non-None value\231\251just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377chr()\210\203\230range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\203\204")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\262\335\206\217last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\260\265\222\233")
MP_MATCH_COMPRESSED("divide by zero", "\377divide by\316")
MP_MATCH_COMPRESSED("empty separator", "\377\237separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\206derive\310\346")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\246")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205got\213\276\224\200\306")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\226keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\226\221\211\200\306")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\226\221\214\200\331")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\362executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\347")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\355")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\245\253\325global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\245\253\325\220")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\234\250\365")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\234\250file")
MP_MATCH_COMPRESSED("index out of range", "\377\301\321\215\304")
MP_MATCH_COMPRESSED("indices must be integers", "\377\266\206\217integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\210\317\206\217\345\317\363\344\342")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\225micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\225\275")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\225\275\224integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\235\210\330\206\217\251\300")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\235\210\317\206\217\251\300\327\251\305\215classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\263\251\313\215str/bytes objects consistent\254\315\201")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\374\207")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\314\267\203\204\230this\377")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\273\243\264\361\333bytes")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\273\243\264heap\326locked")
MP_MATCH_COMPRESSED("module not found", "\377module\203\240")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\213\324\230\207")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\213\373\311\255lay-out conflict")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\213inheritance\203\204")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\206use\211\200\224key\205")
MP_MATCH_COMPRESSED("name not defined", "\377\216\203defined")
MP_MATCH_COMPRESSED("name too long", "\377\216\322\314")
MP_MATCH_COMPRESSED("native code in .mpy unsupported", "\377native\307\230\250\242")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\256power\254\241float\227")
MP_MATCH_COMPRESSED("negative shift count", "\377\256shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\241\360exception\231reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\241\375\224\220\240")
MP_MATCH_COMPRESSED("no such attribute", "\377\241such\370")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\262\200")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\201\223\227\312\207")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\201\223\227\312deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\201\265\241len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\201\302subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\201\203\277iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\201\203callable")
MP_MATCH_COMPRESSED("object not in sequence", "\377\201\203\230\260")
MP_MATCH_COMPRESSED("object not iterable", "\377\201\203iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\201\254\376protocol\221")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\263\251character")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\310\237\313")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\326\237")
MP_MATCH_COMPRESSED("positional arg after **", "\377\214\210\236\323")
MP_MATCH_COMPRESSED("positional arg after keyword arg", "\377\214\210\236\211\210")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\267\257")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\266")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\203\204")
MP_MATCH_COMPRESSED("substring not found", "\377substring\203\240")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\202find\315")
MP_MATCH_COMPRESSED("too many args", "\377\322many\366")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\305\301\321\215\304")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\246\265\222\233")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\232\302\277\357\372\232")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\232takes\330\327\340\252")
MP_MATCH_COMPRESSED("unexpected indent", "\377\247\272")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\247\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\216escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\223match\364\303\272level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377\242\232\224operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\222\274\215\252")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\222\274\215\276\231unpack")
MP_MATCH_COMPRESSED("zero step", "\377\316step")
// Total input length:      2982
// Total compressed length: 1306
// Total data length:       1117
// Predicted saving:        559

// gzip length:             1847
// Percentage of gzip:      131.2%
// zlib length:             1835
// Percentage of zlib:      132.0%
