#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364objec\364can'\364no\364supporte\344functio\356mus\364assignmen\364ar\347keywor\344generato\362multipl\345positiona\354nam\345b\345nonloca\354o\346require\344wron\347doesn'\364fo\362invali\344missin\347suppor\364i\356t\357typ\345incompatibl\345issubclass(\251afte\362empt\371foun\344n\357unsupporte\344allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344.mp\371\341argument\363redefine\344wit\350instanc\345negativ\345overflo\367sequenc\345conver\364defaul\364expect\363failed\254ha\363indice\363in\364outsid\345impor\364inden\364lengt\350memor\371numbe\362synta\370value\363a\356clas\363inde\370isn'\364oute\362rang\345tupl\345'%q\247cod\345fro\355ite\355lis\364lon\347sel\346zer\357\262ba\344ou\364to\357*\252*\370a\363i\363o\362\261#%\344%\361%\365'break'/'continue\247'except\247'yield\247\252\2633-ar\3473\266<\275>\275BaseExceptio\356GeneratorExi\364LH\323Non\345StopIteratio\356__init__(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371arc\350arg\363assig\356attribut\345attribute\363bas\345base\363befor\345bindin\347buffe\362buil\344b\371bytecod\345byte\363callabl\345characte\362")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\333\267loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\335\267\205")
MP_MATCH_COMPRESSED("* arg after **", "\377\336\210\235\322")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\323\206\216\207target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\340pow()\203\204")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\346\220\211\210\206\216\277id")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\351should return\347")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\215reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported", "\377\364\203\204")
MP_MATCH_COMPRESSED("bad format string", "\377\317format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\317typecode")
MP_MATCH_COMPRESSED("bytecode overflow", "\377\374\256")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\202\362\231\243")
MP_MATCH_COMPRESSED("can't convert to int", "\377\202\260\231\266")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\202\260\231str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\202create\254")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\202declare\217\230\303\307")
MP_MATCH_COMPRESSED("can't delete expression", "\377\202delete\243")
MP_MATCH_COMPRESSED("can't import name %q", "\377\202\270\215\331")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\202perform relative\270")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\202send non-None value\231\250just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377chr()\210\203\230range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\203\204")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\261\334\206\216last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\257\264\222\272")
MP_MATCH_COMPRESSED("divide by zero", "\377divide\373\315")
MP_MATCH_COMPRESSED("empty separator", "\377\236separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\206derive\310\344")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\245")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205got\213\276\224\200\306")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\226keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\226\221\211\200\306")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\226\221\214\200\330")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\355executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\345")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\350")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\244\252\324global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\244\252\324\217")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\233\247\360")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\233\247file")
MP_MATCH_COMPRESSED("index out of range", "\377\301\320\220\304")
MP_MATCH_COMPRESSED("indices must be integers", "\377\265\206\216integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\210\316\206\216\343\316\356\342\341")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\225micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\225\275")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\225\275\224integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\234\210\327\206\216\250\300")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\234\210\316\206\216\250\300\326\250\305\220classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\262\250\312\220str/bytes objects consistent\253\314\201")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\367\207")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\313\266\203\204\230this\372")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\273\242\263\354\332\375")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\273\242\263heap\325locked")
MP_MATCH_COMPRESSED("module not found", "\377module\203\237")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\213\323\230\207")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\213\366have\254lay-out conflict")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\213inheritance\203\204")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\206use\211\200\224key\205")
MP_MATCH_COMPRESSED("name not defined", "\377\215\203defined")
MP_MATCH_COMPRESSED("name too long", "\377\215\321\313")
MP_MATCH_COMPRESSED("native code in .mpy unsupported", "\377native\307\230\247\241")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\255power\253\240float\227")
MP_MATCH_COMPRESSED("negative shift count", "\377\255shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\240\353exception\231reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\240\370\224\217\237")
MP_MATCH_COMPRESSED("no such attribute", "\377\240such\363")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\261\200")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\201\223\227\311\207")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\201\223\227\311deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\201\264\240len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\201\302subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\201\203\277iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\201\203\376")
MP_MATCH_COMPRESSED("object not in sequence", "\377\201\203\230\257")
MP_MATCH_COMPRESSED("object not iterable", "\377\201\203iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\201\253\371protocol\221")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\262\250\377")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\310\236\312")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\325\236")
MP_MATCH_COMPRESSED("positional arg after **", "\377\214\210\235\322")
MP_MATCH_COMPRESSED("positional arg after keyword arg", "\377\214\210\235\211\210")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\266\256")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\265")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\203\204")
MP_MATCH_COMPRESSED("substring not found", "\377substring\203\237")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\202find\314")
MP_MATCH_COMPRESSED("too many args", "\377\321many\361")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\305\301\320\220\304")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\245\264\222\272")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\232\302\277\352\365\232")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\232takes\327\326\337\251")
MP_MATCH_COMPRESSED("unexpected indent", "\377\246\271")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\246\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\215escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\223match\357\303\271level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377\241\232\224operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\222\274\220\251")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\222\274\220\276\231unpack")
MP_MATCH_COMPRESSED("zero step", "\377\315step")
// Total input length:      2930
// Total compressed length: 1262
// Total data length:       1125
// Predicted saving:        543

// gzip length:             1798
// Percentage of gzip:      132.8%
// zlib length:             1786
// Percentage of zlib:      133.7%
