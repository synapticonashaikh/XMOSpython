#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("objec\364supporte\344no\364argumen\364functio\356can'\364generato\362mus\364multipl\345require\344wron\347keywor\344missin\347suppor\364o\346typ\345incompatibl\345issubclass(\251ar\347empt\371fo\362t\357unsupporte\344allocatio\356assignmen\364tuple/lis\364.mp\371\341argument\363nam\345wit\350b\345i\356instanc\345negativ\345n\357sequenc\345conver\364doesn'\364expect\363failed\254ha\363indice\363in\364impor\364lengt\350memor\371numbe\362value\363clas\363foun\344inde\370isn'\364rang\345tupl\345'%q\247fro\355ite\355lis\364lon\347zer\357\262ba\344ou\364a\356i\363o\362\261#%\344%\361%\365\2633-ar\3473\266<\275>\275BaseExceptio\356GeneratorExi\364Non\345StopIteratio\356__init__(\251acceptabl\345activ\345allocatin\347alread\371an\344arc\350attribut\345attribute\363bas\345base\363befor\345buffe\362buil\344b\371byte\363callabl\345characte\362chr(\251classe\363cod\345compilatio\356conflic\364consisten\364coun\364creat\345decima\354define\344deletio\356deriv\345dic\364dictionar\371divid\345exceptio\356exception\363executin\347expecte\344fil\345floa\364forma\364go\364hav\345hea\360ignore\344implicitl\371inheritanc\345int(\251intege\362")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\310pow()\202\201")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\320should return\316")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\203num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported", "\377\330\202\201")
MP_MATCH_COMPRESSED("bad format string", "\377\276\367string")
MP_MATCH_COMPRESSED("bad typecode", "\377\276typecode")
MP_MATCH_COMPRESSED("can't convert to int", "\377\205\245\225\253")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\205\245\225str\374")
MP_MATCH_COMPRESSED("can't create instance", "\377\205\351\241")
MP_MATCH_COMPRESSED("can't import name %q", "\377\205\254\235\305")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\205perform relative\254")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\205send non-None value\225\233just-started\206")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377\342\222\202\240range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377\352numbers\202\201")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377\356update\244\251\212\255")
MP_MATCH_COMPRESSED("divide by zero", "\377\360\336\274")
MP_MATCH_COMPRESSED("empty separator", "\377\223separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377\362\207\355\270\314")
MP_MATCH_COMPRESSED("expected tuple/list", "\377\364\231")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\204\370\210\260\224\203\267")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\204\214keyword-only\203")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\204\214\211\213\203\267")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\204\214\211positional\203\304")
MP_MATCH_COMPRESSED("generator already executing", "\377\206\324\363")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\206\373\315")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\206raised\317")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\220\232\326")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\220\232\365")
MP_MATCH_COMPRESSED("index out of range", "\377\263\277\216\265")
MP_MATCH_COMPRESSED("indices must be integers", "\377\252\207\237integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377\376\222\275\207\237\313\275\325\312\311")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377invalid syntax\224\377")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\221\222\303\207\237\233\261")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\221\222\275\207\237\233\261\302\233\266\216\343")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\247\233\272\216str/bytes objects\347\236self\200")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\333\230")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\273\253\202\201\240this\335")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\256\227\250\323\306\337")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\256\227\250\372\301locked")
MP_MATCH_COMPRESSED("module not found", "\377module\202\262")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\210\332\371\241lay-out\346")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\210\375\202\201")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\207use\213\203\224key\204")
MP_MATCH_COMPRESSED("name not defined", "\377\235\202\353")
MP_MATCH_COMPRESSED("name too long", "\377\235too\273")
MP_MATCH_COMPRESSED("native code in .mpy unsupported", "\377native\344\240\232\226")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\242power\236\243\366\215")
MP_MATCH_COMPRESSED("negative shift count", "\377\242shift\350")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\243\322\361\225reraise")
MP_MATCH_COMPRESSED("no such attribute", "\377\243such\327")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\200\246\215\271\230")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\200\246\215\271\354")
MP_MATCH_COMPRESSED("object has no len", "\377\200\251\243len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\200\264subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\200\202\300iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\200\202\340")
MP_MATCH_COMPRESSED("object not in sequence", "\377\200\202\240\244")
MP_MATCH_COMPRESSED("object not iterable", "\377\200\202iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\200\236\334protocol\211")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\247\233\341")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\270\223\272")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem():\357\301\223")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("script compilation not supported", "\377script\345\202\201")
MP_MATCH_COMPRESSED("small int overflow", "\377small\253overflow")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\252")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\202\201")
MP_MATCH_COMPRESSED("substring not found", "\377substring\202\262")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\266\263\277\216\265")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\231\251\212\255")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\217\264\300\321\331\217")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\217takes\303\302\307\234")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377unexpected\213\203")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377\226\217\224operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\212\257\216\234")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\212\257\216\260\225unpack")
MP_MATCH_COMPRESSED("zero step", "\377\274step")
// Total input length:      2281
// Total compressed length: 886
// Total data length:       1141
// Predicted saving:        254

// gzip length:             1423
// Percentage of gzip:      142.4%
// zlib length:             1411
// Percentage of zlib:      143.7%
