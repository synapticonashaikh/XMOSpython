#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364objec\364can'\364no\364supporte\344functio\356mus\364assignmen\364ar\347keywor\344generato\362nam\345multipl\345invali\344positiona\354lengt\350o\346b\345nonloca\354require\344wron\347doesn'\364fo\362missin\347suppor\364i\356t\357typ\345incompatibl\345issubclass(\251afte\362empt\371foun\344i\363n\357to\357unsupporte\344allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344.mp\371Fil\345\341argument\363fil\345lon\347redefine\344wit\350instanc\345negativ\345overflo\367sequenc\345Invali\344conver\364defaul\364expect\363failed\254ha\363indice\363in\364outsid\345impor\364inden\364memor\371numbe\362synta\370value\363a\356clas\363inde\370isn'\364oute\362rang\345tupl\345'%q\247cod\345fro\355hav\345ite\355lis\364sel\346zer\357\262ba\344ou\364*\252*\370a\363o\362\261#%\344%\361%\365'break'/'continue\247'except\247'yield\247\252\2633-ar\3473\266\264<\275>\275BaseExceptio\356GeneratorExi\364INSTANC\305INVALI\304LH\323Lis\364Non\345StopIteratio\356__init__(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371arc\350arg\363assig\356attribut\345attribute\363bas\345base\363befor\345")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\337\276loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\341\276\205")
MP_MATCH_COMPRESSED("* arg after **", "\377\342\210\236\327")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\330\206\221\207target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\344pow()\203\204")
MP_MATCH_COMPRESSED("File is too large", "\377\253\241\243large")
MP_MATCH_COMPRESSED("File length is invalid", "\377\253\217\241\215")
MP_MATCH_COMPRESSED("File name is too long", "\377\253\213\241\243\257")
MP_MATCH_COMPRESSED("INVALID INSTANCE", "\377\354\353")
MP_MATCH_COMPRESSED("Invalid file flag", "\377\266\256flag")
MP_MATCH_COMPRESSED("Invalid file name", "\377\266\256\213")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\355\220\211\210\206\221\305id")
MP_MATCH_COMPRESSED("List must have length of exactly 4", "\377\356\206\317\217\220exactly\346")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\361should return\357")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\213reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported", "\377\374\203\204")
MP_MATCH_COMPRESSED("bad format string", "\377\325format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\325typecode")
MP_MATCH_COMPRESSED("bytecode overflow", "\377bytecode\264")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\202\372\232\246")
MP_MATCH_COMPRESSED("can't convert to int", "\377\202\267\232\275")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\202\267\232str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\202create\262")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\202declare\222\231\311\315")
MP_MATCH_COMPRESSED("can't delete expression", "\377\202delete\246")
MP_MATCH_COMPRESSED("can't import name %q", "\377\202\277\213\335")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\202perform relative\277")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\202send non-None value\232\254just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377chr()\210\203\231range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\203\204")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\270\340\206\221last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\265\273\224\217")
MP_MATCH_COMPRESSED("divide by zero", "\377divide by\323")
MP_MATCH_COMPRESSED("empty separator", "\377\237separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\206derive\316\351")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\250")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205got\214\304\226\200\314")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\227keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\227\223\211\200\314")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\227\223\216\200\334")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\365executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\352")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\360")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\247\260\331global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\247\260\331\222")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\234\252\370")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\234\252\256")
MP_MATCH_COMPRESSED("index out of range", "\377\307\326\220\312")
MP_MATCH_COMPRESSED("indices must be integers", "\377\274\206\221integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\210\324\206\221\350\324\366\347\345")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\215micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\215\303")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\215\303\226integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\235\210\333\206\221\254\306")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\235\210\324\206\221\254\306\332\254\313\220classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\271\254\321\220str/bytes objects consistent\261\322\201")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\377\207")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\257\275\203\204\231this build")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\301\245\272\364\336bytes")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\301\245\272heap\241locked")
MP_MATCH_COMPRESSED("module not found", "\377module\203\240")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\214\330\231\207")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\214\376\317\262lay-out conflict")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\214inheritance\203\204")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\206use\211\200\226key\205")
MP_MATCH_COMPRESSED("name not defined", "\377\213\203defined")
MP_MATCH_COMPRESSED("name too long", "\377\213\243\257")
MP_MATCH_COMPRESSED("native code in .mpy unsupported", "\377native\315\231\252\244")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\263power\261\242float\230")
MP_MATCH_COMPRESSED("negative shift count", "\377\263shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\242\363exception\232reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\242binding\226\222\240")
MP_MATCH_COMPRESSED("no such attribute", "\377\242such\373")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\270\200")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\201\225\230\320\207")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\201\225\230\320deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\201\273\242len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\201\310subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\201\203\305iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\201\203callable")
MP_MATCH_COMPRESSED("object not in sequence", "\377\201\203\231\265")
MP_MATCH_COMPRESSED("object not iterable", "\377\201\203iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\201\261buffer protocol\223")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\271\254character")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\316\237\321")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\241\237")
MP_MATCH_COMPRESSED("positional arg after **", "\377\216\210\236\327")
MP_MATCH_COMPRESSED("positional arg after keyword arg", "\377\216\210\236\211\210")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\275\264")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\274")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\203\204")
MP_MATCH_COMPRESSED("substring not found", "\377substring\203\240")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\202find\322")
MP_MATCH_COMPRESSED("too many args", "\377\243many\371")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\313\307\326\220\312")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\250\273\224\217")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\233\310\305\362\375\233")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\233takes\333\332\343\255")
MP_MATCH_COMPRESSED("unexpected indent", "\377\251\300")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\251\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\213escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\225match\367\311\300level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377\244\233\226operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\224\302\220\255")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\224\302\220\304\232unpack")
MP_MATCH_COMPRESSED("zero step", "\377\323step")
// Total input length:      3081
// Total compressed length: 1356
// Total data length:       1114
// Predicted saving:        611

// gzip length:             1904
// Percentage of gzip:      129.7%
// zlib length:             1892
// Percentage of zlib:      130.5%
